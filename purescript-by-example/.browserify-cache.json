{"modules":{"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Control.Monad.Eff.Console/foreign.js":{"id":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Control.Monad.Eff.Console/foreign.js","source":"/* global exports, console */\n\"use strict\";\n\n// module Control.Monad.Eff.Console\n\nexports.log = function (s) {\n  return function () {\n    console.log(s);\n    return {};\n  };\n};\n\nexports.error = function (s) {\n  return function () {\n    console.error(s);\n    return {};\n  };\n};\n","deps":{},"file":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Control.Monad.Eff.Console/foreign.js"},"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Control.Monad.Eff.Console/index.js":{"id":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Control.Monad.Eff.Console/index.js","source":"// Generated by psc version 0.7.0.0\n\"use strict\";\nvar $foreign = require(\"./foreign\");\nvar Prelude = require(\"Prelude\");\nvar Control_Monad_Eff = require(\"Control.Monad.Eff\");\nvar print = function (__dict_Show_0) {\n    return Prelude[\"<<<\"](Prelude.semigroupoidFn)($foreign.log)(Prelude.show(__dict_Show_0));\n};\nmodule.exports = {\n    print: print, \n    error: $foreign.error, \n    log: $foreign.log\n};\n","deps":{"./foreign":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Control.Monad.Eff.Console/foreign.js","Prelude":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Prelude/index.js","Control.Monad.Eff":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Control.Monad.Eff/index.js"},"file":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Control.Monad.Eff.Console/index.js"},"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Control.Monad.Eff/foreign.js":{"id":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Control.Monad.Eff/foreign.js","source":"/* global exports */\n\"use strict\";\n\n// module Control.Monad.Eff\n\nexports.returnE = function (a) {\n  return function () {\n    return a;\n  };\n};\n\nexports.bindE = function (a) {\n  return function (f) {\n    return function () {\n      return f(a())();\n    };\n  };\n};\n\nexports.runPure = function (f) {\n  return f();\n};\n\nexports.untilE = function (f) {\n  return function () {\n    while (!f());\n    return {};\n  };\n};\n\nexports.whileE = function (f) {\n  return function (a) {\n    return function () {\n      while (f()) {\n        a();\n      }\n      return {};\n    };\n  };\n};\n\nexports.forE = function (lo) {\n  return function (hi) {\n    return function (f) {\n      return function () {\n        for (var i = lo; i < hi; i++) {\n          f(i)();\n        }\n      };\n    };\n  };\n};\n\nexports.foreachE = function (as) {\n  return function (f) {\n    return function () {\n      for (var i = 0, l = as.length; i < l; i++) {\n        f(as[i])();\n      }\n    };\n  };\n};\n","deps":{},"file":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Control.Monad.Eff/foreign.js"},"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Control.Monad.Eff/index.js":{"id":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Control.Monad.Eff/index.js","source":"// Generated by psc version 0.7.0.0\n\"use strict\";\nvar $foreign = require(\"./foreign\");\nvar Prelude = require(\"Prelude\");\nvar monadEff = new Prelude.Monad(function () {\n    return applicativeEff;\n}, function () {\n    return bindEff;\n});\nvar bindEff = new Prelude.Bind(function () {\n    return applyEff;\n}, $foreign.bindE);\nvar applyEff = new Prelude.Apply(function () {\n    return functorEff;\n}, Prelude.ap(monadEff));\nvar applicativeEff = new Prelude.Applicative(function () {\n    return applyEff;\n}, $foreign.returnE);\nvar functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));\nmodule.exports = {\n    functorEff: functorEff, \n    applyEff: applyEff, \n    applicativeEff: applicativeEff, \n    bindEff: bindEff, \n    monadEff: monadEff, \n    foreachE: $foreign.foreachE, \n    forE: $foreign.forE, \n    whileE: $foreign.whileE, \n    untilE: $foreign.untilE, \n    runPure: $foreign.runPure\n};\n","deps":{"./foreign":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Control.Monad.Eff/foreign.js","Prelude":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Prelude/index.js"},"file":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Control.Monad.Eff/index.js"},"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Main/index.js":{"id":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Main/index.js","source":"// Generated by psc version 0.7.0.0\n\"use strict\";\nvar Control_Monad_Eff_Console = require(\"Control.Monad.Eff.Console\");\nvar main = Control_Monad_Eff_Console.log(\"Hello, World!\");\nmodule.exports = {\n    main: main\n};\n","deps":{"Control.Monad.Eff.Console":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Control.Monad.Eff.Console/index.js"},"file":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Main/index.js"},"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Prelude/foreign.js":{"id":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Prelude/foreign.js","source":"/* global exports */\n\"use strict\";\n\n// module Prelude\n\n//- Functor --------------------------------------------------------------------\n\nexports.arrayMap = function (f) {\n  return function (arr) {\n    var l = arr.length;\n    var result = new Array(l);\n    for (var i = 0; i < l; i++) {\n      result[i] = f(arr[i]);\n    }\n    return result;\n  };\n};\n\n//- Bind -----------------------------------------------------------------------\n\nexports.arrayBind = function (arr) {\n  return function (f) {\n    var result = [];\n    for (var i = 0, l = arr.length; i < l; i++) {\n      Array.prototype.push.apply(result, f(arr[i]));\n    }\n    return result;\n  };\n};\n\n//- Monoid ---------------------------------------------------------------------\n\nexports.concatString = function (s1) {\n  return function (s2) {\n    return s1 + s2;\n  };\n};\n\nexports.concatArray = function (xs) {\n  return function (ys) {\n    return xs.concat(ys);\n  };\n};\n\n//- Semiring -------------------------------------------------------------------\n\nexports.intAdd = function (x) {\n  return function (y) {\n    /* jshint bitwise: false */\n    return x + y | 0;\n  };\n};\n\nexports.intMul = function (x) {\n  return function (y) {\n    /* jshint bitwise: false */\n    return x * y | 0;\n  };\n};\n\nexports.numAdd = function (n1) {\n  return function (n2) {\n    return n1 + n2;\n  };\n};\n\nexports.numMul = function (n1) {\n  return function (n2) {\n    return n1 * n2;\n  };\n};\n\n//- ModuloSemiring -------------------------------------------------------------\n\nexports.intDiv = function (x) {\n  return function (y) {\n    /* jshint bitwise: false */\n    return x / y | 0;\n  };\n};\n\nexports.intMod = function (x) {\n  return function (y) {\n    return x % y;\n  };\n};\n\nexports.numDiv = function (n1) {\n  return function (n2) {\n    return n1 / n2;\n  };\n};\n\n//- Ring -----------------------------------------------------------------------\n\nexports.intSub = function (x) {\n  return function (y) {\n    /* jshint bitwise: false */\n    return x - y | 0;\n  };\n};\n\nexports.numSub = function (n1) {\n  return function (n2) {\n    return n1 - n2;\n  };\n};\n\n//- Eq -------------------------------------------------------------------------\n\nexports.refEq = function (r1) {\n  return function (r2) {\n    return r1 === r2;\n  };\n};\n\nexports.refIneq = function (r1) {\n  return function (r2) {\n    return r1 !== r2;\n  };\n};\n\nexports.eqArrayImpl = function (f) {\n  return function (xs) {\n    return function (ys) {\n      if (xs.length !== ys.length) return false;\n      for (var i = 0; i < xs.length; i++) {\n        if (!f(xs[i])(ys[i])) return false;\n      }\n      return true;\n    };\n  };\n};\n\nexports.ordArrayImpl = function (f) {\n  return function (xs) {\n    return function (ys) {\n      var i = 0;\n      var xlen = xs.length;\n      var ylen = ys.length;\n      while (i < xlen && i < ylen) {\n        var x = xs[i];\n        var y = ys[i];\n        var o = f(x)(y);\n        if (o !== 0) {\n          return o;\n        }\n        i++;\n      }\n      if (xlen === ylen) {\n        return 0;\n      } else if (xlen > ylen) {\n        return -1;\n      } else {\n        return 1;\n      }\n    };\n  };\n};\n\n//- Ord ------------------------------------------------------------------------\n\nexports.unsafeCompareImpl = function (lt) {\n  return function (eq) {\n    return function (gt) {\n      return function (x) {\n        return function (y) {\n          return x < y ? lt : x > y ? gt : eq;\n        };\n      };\n    };\n  };\n};\n\n//- Bounded --------------------------------------------------------------------\n\nexports.topInt = 2147483647;\nexports.bottomInt = -2147483648;\n\nexports.topChar = String.fromCharCode(65535);\nexports.bottomChar = String.fromCharCode(0);\n\n//- BooleanAlgebra -------------------------------------------------------------\n\nexports.boolOr = function (b1) {\n  return function (b2) {\n    return b1 || b2;\n  };\n};\n\nexports.boolAnd = function (b1) {\n  return function (b2) {\n    return b1 && b2;\n  };\n};\n\nexports.boolNot = function (b) {\n  return !b;\n};\n\n//- Show -----------------------------------------------------------------------\n\nexports.showIntImpl = function (n) {\n  return n.toString();\n};\n\nexports.showNumberImpl = function (n) {\n  /* jshint bitwise: false */\n  return n === (n | 0) ? n + \".0\" : n.toString();\n};\n\nexports.showCharImpl = function (c) {\n  return c === \"'\" ? \"'\\\\''\" : \"'\" + c + \"'\";\n};\n\nexports.showStringImpl = function (s) {\n  return JSON.stringify(s);\n};\n\nexports.showArrayImpl = function (f) {\n  return function (xs) {\n    var ss = [];\n    for (var i = 0, l = xs.length; i < l; i++) {\n      ss[i] = f(xs[i]);\n    }\n    return \"[\" + ss.join(\",\") + \"]\";\n  };\n};\n","deps":{},"file":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Prelude/foreign.js"},"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Prelude/index.js":{"id":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Prelude/index.js","source":"// Generated by psc version 0.7.0.0\n\"use strict\";\nvar $foreign = require(\"./foreign\");\nvar Unit = function (x) {\n    return x;\n};\nvar LT = (function () {\n    function LT() {\n\n    };\n    LT.value = new LT();\n    return LT;\n})();\nvar GT = (function () {\n    function GT() {\n\n    };\n    GT.value = new GT();\n    return GT;\n})();\nvar EQ = (function () {\n    function EQ() {\n\n    };\n    EQ.value = new EQ();\n    return EQ;\n})();\nvar Semigroupoid = function (compose) {\n    this.compose = compose;\n};\nvar Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {\n    this[\"__superclass_Prelude.Semigroupoid_0\"] = __superclass_Prelude$dotSemigroupoid_0;\n    this.id = id;\n};\nvar Functor = function (map) {\n    this.map = map;\n};\nvar Apply = function (__superclass_Prelude$dotFunctor_0, apply) {\n    this[\"__superclass_Prelude.Functor_0\"] = __superclass_Prelude$dotFunctor_0;\n    this.apply = apply;\n};\nvar Applicative = function (__superclass_Prelude$dotApply_0, pure) {\n    this[\"__superclass_Prelude.Apply_0\"] = __superclass_Prelude$dotApply_0;\n    this.pure = pure;\n};\nvar Bind = function (__superclass_Prelude$dotApply_0, bind) {\n    this[\"__superclass_Prelude.Apply_0\"] = __superclass_Prelude$dotApply_0;\n    this.bind = bind;\n};\nvar Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {\n    this[\"__superclass_Prelude.Applicative_0\"] = __superclass_Prelude$dotApplicative_0;\n    this[\"__superclass_Prelude.Bind_1\"] = __superclass_Prelude$dotBind_1;\n};\nvar Semigroup = function (append) {\n    this.append = append;\n};\nvar Semiring = function (add, mul, one, zero) {\n    this.add = add;\n    this.mul = mul;\n    this.one = one;\n    this.zero = zero;\n};\nvar Ring = function (__superclass_Prelude$dotSemiring_0, sub) {\n    this[\"__superclass_Prelude.Semiring_0\"] = __superclass_Prelude$dotSemiring_0;\n    this.sub = sub;\n};\nvar ModuloSemiring = function (__superclass_Prelude$dotSemiring_0, div, mod) {\n    this[\"__superclass_Prelude.Semiring_0\"] = __superclass_Prelude$dotSemiring_0;\n    this.div = div;\n    this.mod = mod;\n};\nvar DivisionRing = function (__superclass_Prelude$dotModuloSemiring_1, __superclass_Prelude$dotRing_0) {\n    this[\"__superclass_Prelude.ModuloSemiring_1\"] = __superclass_Prelude$dotModuloSemiring_1;\n    this[\"__superclass_Prelude.Ring_0\"] = __superclass_Prelude$dotRing_0;\n};\nvar Num = function (__superclass_Prelude$dotDivisionRing_0) {\n    this[\"__superclass_Prelude.DivisionRing_0\"] = __superclass_Prelude$dotDivisionRing_0;\n};\nvar Eq = function (eq) {\n    this.eq = eq;\n};\nvar Ord = function (__superclass_Prelude$dotEq_0, compare) {\n    this[\"__superclass_Prelude.Eq_0\"] = __superclass_Prelude$dotEq_0;\n    this.compare = compare;\n};\nvar Bounded = function (bottom, top) {\n    this.bottom = bottom;\n    this.top = top;\n};\nvar BoundedOrd = function (__superclass_Prelude$dotBounded_0, __superclass_Prelude$dotOrd_1) {\n    this[\"__superclass_Prelude.Bounded_0\"] = __superclass_Prelude$dotBounded_0;\n    this[\"__superclass_Prelude.Ord_1\"] = __superclass_Prelude$dotOrd_1;\n};\nvar BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {\n    this[\"__superclass_Prelude.Bounded_0\"] = __superclass_Prelude$dotBounded_0;\n    this.conj = conj;\n    this.disj = disj;\n    this.not = not;\n};\nvar Show = function (show) {\n    this.show = show;\n};\nvar $dollar = function (f) {\n    return function (x) {\n        return f(x);\n    };\n};\nvar $hash = function (x) {\n    return function (f) {\n        return f(x);\n    };\n};\nvar zero = function (dict) {\n    return dict.zero;\n};\nvar unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);\nvar unit = {};\nvar top = function (dict) {\n    return dict.top;\n};\nvar sub = function (dict) {\n    return dict.sub;\n};\nvar $minus = function (__dict_Ring_0) {\n    return sub(__dict_Ring_0);\n};\nvar showUnit = new Show(function (_36) {\n    return \"unit\";\n});\nvar showString = new Show($foreign.showStringImpl);\nvar showOrdering = new Show(function (_37) {\n    if (_37 instanceof LT) {\n        return \"LT\";\n    };\n    if (_37 instanceof GT) {\n        return \"GT\";\n    };\n    if (_37 instanceof EQ) {\n        return \"EQ\";\n    };\n    throw new Error(\"Failed pattern match at /Users/alex/Documents/code/purescript-experiments/purescript-by-example/bower_components/purescript-prelude/src/Prelude.purs line 863, column 1 - line 868, column 1: \" + [ _37.constructor.name ]);\n});\nvar showNumber = new Show($foreign.showNumberImpl);\nvar showInt = new Show($foreign.showIntImpl);\nvar showChar = new Show($foreign.showCharImpl);\nvar showBoolean = new Show(function (_35) {\n    if (_35) {\n        return \"true\";\n    };\n    if (!_35) {\n        return \"false\";\n    };\n    throw new Error(\"Failed pattern match at /Users/alex/Documents/code/purescript-experiments/purescript-by-example/bower_components/purescript-prelude/src/Prelude.purs line 841, column 1 - line 845, column 1: \" + [ _35.constructor.name ]);\n});\nvar show = function (dict) {\n    return dict.show;\n};\nvar showArray = function (__dict_Show_1) {\n    return new Show($foreign.showArrayImpl(show(__dict_Show_1)));\n};\nvar semiringUnit = new Semiring(function (_8) {\n    return function (_9) {\n        return unit;\n    };\n}, function (_10) {\n    return function (_11) {\n        return unit;\n    };\n}, unit, unit);\nvar semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);\nvar semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);\nvar semigroupoidFn = new Semigroupoid(function (f) {\n    return function (g) {\n        return function (x) {\n            return f(g(x));\n        };\n    };\n});\nvar semigroupUnit = new Semigroup(function (_5) {\n    return function (_6) {\n        return unit;\n    };\n});\nvar semigroupString = new Semigroup($foreign.concatString);\nvar semigroupOrdering = new Semigroup(function (_7) {\n    return function (y) {\n        if (_7 instanceof LT) {\n            return LT.value;\n        };\n        if (_7 instanceof GT) {\n            return GT.value;\n        };\n        if (_7 instanceof EQ) {\n            return y;\n        };\n        throw new Error(\"Failed pattern match at /Users/alex/Documents/code/purescript-experiments/purescript-by-example/bower_components/purescript-prelude/src/Prelude.purs line 413, column 1 - line 418, column 1: \" + [ _7.constructor.name, y.constructor.name ]);\n    };\n});\nvar semigroupArray = new Semigroup($foreign.concatArray);\nvar ringUnit = new Ring(function () {\n    return semiringUnit;\n}, function (_12) {\n    return function (_13) {\n        return unit;\n    };\n});\nvar ringNumber = new Ring(function () {\n    return semiringNumber;\n}, $foreign.numSub);\nvar ringInt = new Ring(function () {\n    return semiringInt;\n}, $foreign.intSub);\nvar pure = function (dict) {\n    return dict.pure;\n};\nvar $$return = function (__dict_Applicative_2) {\n    return pure(__dict_Applicative_2);\n};\nvar otherwise = true;\nvar one = function (dict) {\n    return dict.one;\n};\nvar not = function (dict) {\n    return dict.not;\n};\nvar negate = function (__dict_Ring_3) {\n    return function (a) {\n        return $minus(__dict_Ring_3)(zero(__dict_Ring_3[\"__superclass_Prelude.Semiring_0\"]()))(a);\n    };\n};\nvar mul = function (dict) {\n    return dict.mul;\n};\nvar $times = function (__dict_Semiring_4) {\n    return mul(__dict_Semiring_4);\n};\nvar moduloSemiringUnit = new ModuloSemiring(function () {\n    return semiringUnit;\n}, function (_16) {\n    return function (_17) {\n        return unit;\n    };\n}, function (_18) {\n    return function (_19) {\n        return unit;\n    };\n});\nvar moduloSemiringNumber = new ModuloSemiring(function () {\n    return semiringNumber;\n}, $foreign.numDiv, function (_14) {\n    return function (_15) {\n        return 0.0;\n    };\n});\nvar moduloSemiringInt = new ModuloSemiring(function () {\n    return semiringInt;\n}, $foreign.intDiv, $foreign.intMod);\nvar mod = function (dict) {\n    return dict.mod;\n};\nvar map = function (dict) {\n    return dict.map;\n};\nvar $less$dollar$greater = function (__dict_Functor_5) {\n    return map(__dict_Functor_5);\n};\nvar $less$hash$greater = function (__dict_Functor_6) {\n    return function (fa) {\n        return function (f) {\n            return $less$dollar$greater(__dict_Functor_6)(f)(fa);\n        };\n    };\n};\nvar id = function (dict) {\n    return dict.id;\n};\nvar functorArray = new Functor($foreign.arrayMap);\nvar flip = function (f) {\n    return function (b) {\n        return function (a) {\n            return f(a)(b);\n        };\n    };\n};\nvar eqUnit = new Eq(function (_20) {\n    return function (_21) {\n        return true;\n    };\n});\nvar ordUnit = new Ord(function () {\n    return eqUnit;\n}, function (_24) {\n    return function (_25) {\n        return EQ.value;\n    };\n});\nvar eqString = new Eq($foreign.refEq);\nvar ordString = new Ord(function () {\n    return eqString;\n}, unsafeCompare);\nvar eqOrdering = new Eq(function (_22) {\n    return function (_23) {\n        if (_22 instanceof LT && _23 instanceof LT) {\n            return true;\n        };\n        if (_22 instanceof GT && _23 instanceof GT) {\n            return true;\n        };\n        if (_22 instanceof EQ && _23 instanceof EQ) {\n            return true;\n        };\n        return false;\n    };\n});\nvar ordOrdering = new Ord(function () {\n    return eqOrdering;\n}, function (_26) {\n    return function (_27) {\n        if (_26 instanceof LT && _27 instanceof LT) {\n            return EQ.value;\n        };\n        if (_26 instanceof EQ && _27 instanceof EQ) {\n            return EQ.value;\n        };\n        if (_26 instanceof GT && _27 instanceof GT) {\n            return EQ.value;\n        };\n        if (_26 instanceof LT) {\n            return LT.value;\n        };\n        if (_26 instanceof EQ && _27 instanceof LT) {\n            return GT.value;\n        };\n        if (_26 instanceof EQ && _27 instanceof GT) {\n            return LT.value;\n        };\n        if (_26 instanceof GT) {\n            return GT.value;\n        };\n        throw new Error(\"Failed pattern match at /Users/alex/Documents/code/purescript-experiments/purescript-by-example/bower_components/purescript-prelude/src/Prelude.purs line 668, column 1 - line 677, column 1: \" + [ _26.constructor.name, _27.constructor.name ]);\n    };\n});\nvar eqNumber = new Eq($foreign.refEq);\nvar ordNumber = new Ord(function () {\n    return eqNumber;\n}, unsafeCompare);\nvar eqInt = new Eq($foreign.refEq);\nvar ordInt = new Ord(function () {\n    return eqInt;\n}, unsafeCompare);\nvar eqChar = new Eq($foreign.refEq);\nvar ordChar = new Ord(function () {\n    return eqChar;\n}, unsafeCompare);\nvar eqBoolean = new Eq($foreign.refEq);\nvar ordBoolean = new Ord(function () {\n    return eqBoolean;\n}, unsafeCompare);\nvar eq = function (dict) {\n    return dict.eq;\n};\nvar $eq$eq = function (__dict_Eq_7) {\n    return eq(__dict_Eq_7);\n};\nvar eqArray = function (__dict_Eq_8) {\n    return new Eq($foreign.eqArrayImpl($eq$eq(__dict_Eq_8)));\n};\nvar divisionRingUnit = new DivisionRing(function () {\n    return moduloSemiringUnit;\n}, function () {\n    return ringUnit;\n});\nvar numUnit = new Num(function () {\n    return divisionRingUnit;\n});\nvar divisionRingNumber = new DivisionRing(function () {\n    return moduloSemiringNumber;\n}, function () {\n    return ringNumber;\n});\nvar numNumber = new Num(function () {\n    return divisionRingNumber;\n});\nvar div = function (dict) {\n    return dict.div;\n};\nvar $div = function (__dict_ModuloSemiring_10) {\n    return div(__dict_ModuloSemiring_10);\n};\nvar disj = function (dict) {\n    return dict.disj;\n};\nvar $bar$bar = function (__dict_BooleanAlgebra_11) {\n    return disj(__dict_BooleanAlgebra_11);\n};\nvar $$const = function (a) {\n    return function (_3) {\n        return a;\n    };\n};\nvar $$void = function (__dict_Functor_12) {\n    return function (fa) {\n        return $less$dollar$greater(__dict_Functor_12)($$const(unit))(fa);\n    };\n};\nvar conj = function (dict) {\n    return dict.conj;\n};\nvar $amp$amp = function (__dict_BooleanAlgebra_13) {\n    return conj(__dict_BooleanAlgebra_13);\n};\nvar compose = function (dict) {\n    return dict.compose;\n};\nvar functorFn = new Functor(compose(semigroupoidFn));\nvar $less$less$less = function (__dict_Semigroupoid_14) {\n    return compose(__dict_Semigroupoid_14);\n};\nvar $greater$greater$greater = function (__dict_Semigroupoid_15) {\n    return flip(compose(__dict_Semigroupoid_15));\n};\nvar compare = function (dict) {\n    return dict.compare;\n};\nvar ordArray = function (__dict_Ord_16) {\n    return new Ord(function () {\n        return eqArray(__dict_Ord_16[\"__superclass_Prelude.Eq_0\"]());\n    }, function (xs) {\n        return function (ys) {\n            return $dollar(compare(ordInt)(0))($foreign.ordArrayImpl(function (x) {\n                return function (y) {\n                    var _46 = compare(__dict_Ord_16)(x)(y);\n                    if (_46 instanceof EQ) {\n                        return 0;\n                    };\n                    if (_46 instanceof LT) {\n                        return 1;\n                    };\n                    if (_46 instanceof GT) {\n                        return negate(ringInt)(1);\n                    };\n                    throw new Error(\"Failed pattern match at /Users/alex/Documents/code/purescript-experiments/purescript-by-example/bower_components/purescript-prelude/src/Prelude.purs line 660, column 1 - line 666, column 1: \" + [ _46.constructor.name ]);\n                };\n            })(xs)(ys));\n        };\n    });\n};\nvar $less = function (__dict_Ord_17) {\n    return function (a1) {\n        return function (a2) {\n            var _47 = compare(__dict_Ord_17)(a1)(a2);\n            if (_47 instanceof LT) {\n                return true;\n            };\n            return false;\n        };\n    };\n};\nvar $less$eq = function (__dict_Ord_18) {\n    return function (a1) {\n        return function (a2) {\n            var _48 = compare(__dict_Ord_18)(a1)(a2);\n            if (_48 instanceof GT) {\n                return false;\n            };\n            return true;\n        };\n    };\n};\nvar $greater = function (__dict_Ord_19) {\n    return function (a1) {\n        return function (a2) {\n            var _49 = compare(__dict_Ord_19)(a1)(a2);\n            if (_49 instanceof GT) {\n                return true;\n            };\n            return false;\n        };\n    };\n};\nvar $greater$eq = function (__dict_Ord_20) {\n    return function (a1) {\n        return function (a2) {\n            var _50 = compare(__dict_Ord_20)(a1)(a2);\n            if (_50 instanceof LT) {\n                return false;\n            };\n            return true;\n        };\n    };\n};\nvar categoryFn = new Category(function () {\n    return semigroupoidFn;\n}, function (x) {\n    return x;\n});\nvar boundedUnit = new Bounded(unit, unit);\nvar boundedOrdering = new Bounded(LT.value, GT.value);\nvar boundedOrdUnit = new BoundedOrd(function () {\n    return boundedUnit;\n}, function () {\n    return ordUnit;\n});\nvar boundedOrdOrdering = new BoundedOrd(function () {\n    return boundedOrdering;\n}, function () {\n    return ordOrdering;\n});\nvar boundedInt = new Bounded($foreign.bottomInt, $foreign.topInt);\nvar boundedOrdInt = new BoundedOrd(function () {\n    return boundedInt;\n}, function () {\n    return ordInt;\n});\nvar boundedChar = new Bounded($foreign.bottomChar, $foreign.topChar);\nvar boundedOrdChar = new BoundedOrd(function () {\n    return boundedChar;\n}, function () {\n    return ordChar;\n});\nvar boundedBoolean = new Bounded(false, true);\nvar boundedOrdBoolean = new BoundedOrd(function () {\n    return boundedBoolean;\n}, function () {\n    return ordBoolean;\n});\nvar bottom = function (dict) {\n    return dict.bottom;\n};\nvar boundedFn = function (__dict_Bounded_21) {\n    return new Bounded(function (_29) {\n        return bottom(__dict_Bounded_21);\n    }, function (_28) {\n        return top(__dict_Bounded_21);\n    });\n};\nvar booleanAlgebraUnit = new BooleanAlgebra(function () {\n    return boundedUnit;\n}, function (_30) {\n    return function (_31) {\n        return unit;\n    };\n}, function (_32) {\n    return function (_33) {\n        return unit;\n    };\n}, function (_34) {\n    return unit;\n});\nvar booleanAlgebraFn = function (__dict_BooleanAlgebra_22) {\n    return new BooleanAlgebra(function () {\n        return boundedFn(__dict_BooleanAlgebra_22[\"__superclass_Prelude.Bounded_0\"]());\n    }, function (fx) {\n        return function (fy) {\n            return function (a) {\n                return conj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));\n            };\n        };\n    }, function (fx) {\n        return function (fy) {\n            return function (a) {\n                return disj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));\n            };\n        };\n    }, function (fx) {\n        return function (a) {\n            return not(__dict_BooleanAlgebra_22)(fx(a));\n        };\n    });\n};\nvar booleanAlgebraBoolean = new BooleanAlgebra(function () {\n    return boundedBoolean;\n}, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);\nvar $div$eq = function (__dict_Eq_9) {\n    return function (x) {\n        return function (y) {\n            return not(booleanAlgebraBoolean)($eq$eq(__dict_Eq_9)(x)(y));\n        };\n    };\n};\nvar bind = function (dict) {\n    return dict.bind;\n};\nvar liftM1 = function (__dict_Monad_23) {\n    return function (f) {\n        return function (a) {\n            return bind(__dict_Monad_23[\"__superclass_Prelude.Bind_1\"]())(a)(function (_0) {\n                return $$return(__dict_Monad_23[\"__superclass_Prelude.Applicative_0\"]())(f(_0));\n            });\n        };\n    };\n};\nvar $greater$greater$eq = function (__dict_Bind_24) {\n    return bind(__dict_Bind_24);\n};\nvar asTypeOf = function (x) {\n    return function (_4) {\n        return x;\n    };\n};\nvar applyFn = new Apply(function () {\n    return functorFn;\n}, function (f) {\n    return function (g) {\n        return function (x) {\n            return f(x)(g(x));\n        };\n    };\n});\nvar bindFn = new Bind(function () {\n    return applyFn;\n}, function (m) {\n    return function (f) {\n        return function (x) {\n            return f(m(x))(x);\n        };\n    };\n});\nvar apply = function (dict) {\n    return dict.apply;\n};\nvar $less$times$greater = function (__dict_Apply_25) {\n    return apply(__dict_Apply_25);\n};\nvar liftA1 = function (__dict_Applicative_26) {\n    return function (f) {\n        return function (a) {\n            return $less$times$greater(__dict_Applicative_26[\"__superclass_Prelude.Apply_0\"]())(pure(__dict_Applicative_26)(f))(a);\n        };\n    };\n};\nvar applicativeFn = new Applicative(function () {\n    return applyFn;\n}, $$const);\nvar monadFn = new Monad(function () {\n    return applicativeFn;\n}, function () {\n    return bindFn;\n});\nvar append = function (dict) {\n    return dict.append;\n};\nvar $plus$plus = function (__dict_Semigroup_27) {\n    return append(__dict_Semigroup_27);\n};\nvar $less$greater = function (__dict_Semigroup_28) {\n    return append(__dict_Semigroup_28);\n};\nvar semigroupFn = function (__dict_Semigroup_29) {\n    return new Semigroup(function (f) {\n        return function (g) {\n            return function (x) {\n                return $less$greater(__dict_Semigroup_29)(f(x))(g(x));\n            };\n        };\n    });\n};\nvar ap = function (__dict_Monad_30) {\n    return function (f) {\n        return function (a) {\n            return bind(__dict_Monad_30[\"__superclass_Prelude.Bind_1\"]())(f)(function (_2) {\n                return bind(__dict_Monad_30[\"__superclass_Prelude.Bind_1\"]())(a)(function (_1) {\n                    return $$return(__dict_Monad_30[\"__superclass_Prelude.Applicative_0\"]())(_2(_1));\n                });\n            });\n        };\n    };\n};\nvar monadArray = new Monad(function () {\n    return applicativeArray;\n}, function () {\n    return bindArray;\n});\nvar bindArray = new Bind(function () {\n    return applyArray;\n}, $foreign.arrayBind);\nvar applyArray = new Apply(function () {\n    return functorArray;\n}, ap(monadArray));\nvar applicativeArray = new Applicative(function () {\n    return applyArray;\n}, function (x) {\n    return [ x ];\n});\nvar add = function (dict) {\n    return dict.add;\n};\nvar $plus = function (__dict_Semiring_31) {\n    return add(__dict_Semiring_31);\n};\nmodule.exports = {\n    LT: LT, \n    GT: GT, \n    EQ: EQ, \n    Show: Show, \n    BooleanAlgebra: BooleanAlgebra, \n    BoundedOrd: BoundedOrd, \n    Bounded: Bounded, \n    Ord: Ord, \n    Eq: Eq, \n    DivisionRing: DivisionRing, \n    Num: Num, \n    Ring: Ring, \n    ModuloSemiring: ModuloSemiring, \n    Semiring: Semiring, \n    Semigroup: Semigroup, \n    Monad: Monad, \n    Bind: Bind, \n    Applicative: Applicative, \n    Apply: Apply, \n    Functor: Functor, \n    Category: Category, \n    Semigroupoid: Semigroupoid, \n    show: show, \n    \"||\": $bar$bar, \n    \"&&\": $amp$amp, \n    not: not, \n    disj: disj, \n    conj: conj, \n    bottom: bottom, \n    top: top, \n    unsafeCompare: unsafeCompare, \n    \">=\": $greater$eq, \n    \"<=\": $less$eq, \n    \">\": $greater, \n    \"<\": $less, \n    compare: compare, \n    \"/=\": $div$eq, \n    \"==\": $eq$eq, \n    eq: eq, \n    \"-\": $minus, \n    negate: negate, \n    sub: sub, \n    \"/\": $div, \n    mod: mod, \n    div: div, \n    \"*\": $times, \n    \"+\": $plus, \n    one: one, \n    mul: mul, \n    zero: zero, \n    add: add, \n    \"++\": $plus$plus, \n    \"<>\": $less$greater, \n    append: append, \n    ap: ap, \n    liftM1: liftM1, \n    \"return\": $$return, \n    \">>=\": $greater$greater$eq, \n    bind: bind, \n    liftA1: liftA1, \n    pure: pure, \n    \"<*>\": $less$times$greater, \n    apply: apply, \n    \"void\": $$void, \n    \"<#>\": $less$hash$greater, \n    \"<$>\": $less$dollar$greater, \n    map: map, \n    id: id, \n    \">>>\": $greater$greater$greater, \n    \"<<<\": $less$less$less, \n    compose: compose, \n    otherwise: otherwise, \n    asTypeOf: asTypeOf, \n    \"const\": $$const, \n    flip: flip, \n    \"#\": $hash, \n    \"$\": $dollar, \n    unit: unit, \n    semigroupoidFn: semigroupoidFn, \n    categoryFn: categoryFn, \n    functorFn: functorFn, \n    functorArray: functorArray, \n    applyFn: applyFn, \n    applyArray: applyArray, \n    applicativeFn: applicativeFn, \n    applicativeArray: applicativeArray, \n    bindFn: bindFn, \n    bindArray: bindArray, \n    monadFn: monadFn, \n    monadArray: monadArray, \n    semigroupString: semigroupString, \n    semigroupUnit: semigroupUnit, \n    semigroupFn: semigroupFn, \n    semigroupOrdering: semigroupOrdering, \n    semigroupArray: semigroupArray, \n    semiringInt: semiringInt, \n    semiringNumber: semiringNumber, \n    semiringUnit: semiringUnit, \n    ringInt: ringInt, \n    ringNumber: ringNumber, \n    ringUnit: ringUnit, \n    moduloSemiringInt: moduloSemiringInt, \n    moduloSemiringNumber: moduloSemiringNumber, \n    moduloSemiringUnit: moduloSemiringUnit, \n    divisionRingNumber: divisionRingNumber, \n    divisionRingUnit: divisionRingUnit, \n    numNumber: numNumber, \n    numUnit: numUnit, \n    eqBoolean: eqBoolean, \n    eqInt: eqInt, \n    eqNumber: eqNumber, \n    eqChar: eqChar, \n    eqString: eqString, \n    eqUnit: eqUnit, \n    eqArray: eqArray, \n    eqOrdering: eqOrdering, \n    ordBoolean: ordBoolean, \n    ordInt: ordInt, \n    ordNumber: ordNumber, \n    ordString: ordString, \n    ordChar: ordChar, \n    ordUnit: ordUnit, \n    ordArray: ordArray, \n    ordOrdering: ordOrdering, \n    boundedBoolean: boundedBoolean, \n    boundedUnit: boundedUnit, \n    boundedOrdering: boundedOrdering, \n    boundedInt: boundedInt, \n    boundedChar: boundedChar, \n    boundedFn: boundedFn, \n    boundedOrdBoolean: boundedOrdBoolean, \n    boundedOrdUnit: boundedOrdUnit, \n    boundedOrdOrdering: boundedOrdOrdering, \n    boundedOrdInt: boundedOrdInt, \n    boundedOrdChar: boundedOrdChar, \n    booleanAlgebraBoolean: booleanAlgebraBoolean, \n    booleanAlgebraUnit: booleanAlgebraUnit, \n    booleanAlgebraFn: booleanAlgebraFn, \n    showBoolean: showBoolean, \n    showInt: showInt, \n    showNumber: showNumber, \n    showChar: showChar, \n    showString: showString, \n    showUnit: showUnit, \n    showArray: showArray, \n    showOrdering: showOrdering\n};\n","deps":{"./foreign":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Prelude/foreign.js"},"file":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Prelude/index.js"},"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/browserify.js":{"entry":true,"expose":false,"file":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/browserify.js","id":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/browserify.js","order":0,"source":"require('Main').main();\n","deps":{"Main":"/Users/alex/Documents/code/purescript-experiments/purescript-by-example/output/Main/index.js"}}},"packages":{},"mtimes":{},"filesPackagePaths":{},"dependentFiles":{}}